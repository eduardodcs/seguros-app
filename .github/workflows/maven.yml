name: Deploy

on:
  push:
    branches:
      - master

jobs:
  sonar:
    name: Análise com SonarQube
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar


  build-app:
    name: Build da aplicação
    needs: sonar
    runs-on: ubuntu-latest

    if: success()

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: github
          server-username: eduardodcs
          server-password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build with Maven
        run: mvn clean install

      - name: Login DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t eddcesilva/seguros-app:latest .

      - name: Push Docker image
        run: docker push eddcesilva/seguros-app:latest